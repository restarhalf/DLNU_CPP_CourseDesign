name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            generator: "Visual Studio 17 2022"
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            generator: "Unix Makefiles"
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            generator: "Unix Makefiles"
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # 使用跨平台的条件判断
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        cmake -B build -G "${{ matrix.generator }}" ^
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} ^
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} ^
          -S .
      shell: cmd

    - name: Configure CMake (Linux)
      # Linux 专用配置
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        cmake -B build \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -S .
      shell: bash

    - name: Build
      # Windows 构建
      if: ${{ matrix.os == 'windows-latest' }}
      run: cmake --build build --config ${{ matrix.build_type }}
      shell: cmd

    - name: Build (Linux)
      # Linux 构建
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: cmake --build build
      shell: bash

    - name: Test
      working-directory: build
      # Windows 测试
      if: ${{ matrix.os == 'windows-latest' }}
      run: ctest -C ${{ matrix.build_type }} --output-on-failure
      shell: cmd

    - name: Test (Linux)
      working-directory: build
      # Linux 测试
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: ctest --output-on-failure
      shell: bash
