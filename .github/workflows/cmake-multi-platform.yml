name: CMake Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false  # 防止一个平台失败导致其他平台取消
      matrix:
        include:
          - os: windows-latest
            platform: windows
            artifact_name: FishGame-Windows.zip
            exe_name: DLNU_CPP_CourseDesign.exe
          - os: ubuntu-latest
            platform: linux
            artifact_name: FishGame-Linux.zip
            exe_name: DLNU_CPP_CourseDesign
          - os: macos-latest
            platform: macos
            artifact_name: FishGame-macOS.zip
            exe_name: DLNU_CPP_CourseDesign
          - os: ubuntu-22.04  # 更新为 Ubuntu 22.04
            platform: android
            artifact_name: FishGame-Android.apk
            build_type: android

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK for Android
      if: matrix.platform == 'android'
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache SDL2 Android
      if: matrix.platform == 'android'
      uses: actions/cache@v4
      with:
        path: |
          android/SDL2
        key: sdl2-android-${{ hashFiles('android/app/build.gradle') }}

    - name: Setup Android SDK and NDK
      if: matrix.platform == 'android'
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: '8.0'

    - name: Install Android Build Tools
      if: matrix.platform == 'android'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build
        yes | sdkmanager --licenses
        sdkmanager \
          "platform-tools" \
          "platforms;android-34" \
          "build-tools;34.0.0" \
          "ndk;25.2.9519653" \
          "cmake;3.22.1"

    - name: Clone SDL2 for Android
      if: matrix.platform == 'android'
      run: |
        cd android
        git clone https://github.com/libsdl-org/SDL.git SDL2
        cd SDL2
        git checkout release-2.28.5

    - name: Clone SDL2_image for Android
      if: matrix.platform == 'android'
      run: |
        cd android
        git clone https://github.com/libsdl-org/SDL_image.git SDL2_image
        cd SDL2_image
        git checkout release-2.6.3

    - name: Clone SDL2_ttf for Android
      if: matrix.platform == 'android'
      run: |
        cd android
        git clone https://github.com/libsdl-org/SDL_ttf.git SDL2_ttf
        cd SDL2_ttf
        git checkout release-2.20.2

    - name: Clone SDL2_mixer for Android
      if: matrix.platform == 'android'
      run: |
        cd android
        git clone https://github.com/libsdl-org/SDL_mixer.git SDL2_mixer
        cd SDL2_mixer
        git checkout release-2.6.3

    - name: Install SDL2 Dependencies (Windows)
      if: runner.os == 'Windows' && matrix.platform == 'windows'
      shell: cmd
      run: |
        curl -L -o SDL2.zip https://github.com/libsdl-org/SDL/releases/download/release-2.28.5/SDL2-devel-2.28.5-VC.zip
        curl -L -o SDL2_image.zip https://github.com/libsdl-org/SDL_image/releases/download/release-2.6.3/SDL2_image-devel-2.6.3-VC.zip
        curl -L -o SDL2_ttf.zip https://github.com/libsdl-org/SDL_ttf/releases/download/release-2.20.2/SDL2_ttf-devel-2.20.2-VC.zip
        curl -L -o SDL2_mixer.zip https://github.com/libsdl-org/SDL_mixer/releases/download/release-2.6.3/SDL2_mixer-devel-2.6.3-VC.zip
        7z x SDL2.zip
        7z x SDL2_image.zip
        7z x SDL2_ttf.zip
        7z x SDL2_mixer.zip

    - name: Install SDL2 Dependencies (Ubuntu)
      if: runner.os == 'Linux' && matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev

    - name: Install SDL2 Dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install sdl2 sdl2_image sdl2_ttf sdl2_mixer

    - name: Configure CMake (Desktop Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        type ${{github.workspace}}/lib/dep/plugins/SDL2/cmake/sdl2-config.cmake
        cmake -B ${{github.workspace}}/build ^
        -DCMAKE_BUILD_TYPE=Release ^
        -DCMAKE_VERBOSE_MAKEFILE=ON ^
        -DCMAKE_PREFIX_PATH=${{github.workspace}}/lib/dep/plugins/SDL2/cmake

    - name: Configure CMake (Desktop Unix)
      if: matrix.platform != 'android' && runner.os != 'Windows'
      run: |
        cmake -B ${{github.workspace}}/build \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_VERBOSE_MAKEFILE=ON \
        -DCMAKE_PREFIX_PATH=/usr/local/lib/cmake

    - name: Configure CMake (Android)
      if: matrix.platform == 'android'
      run: |
        cmake -B ${{github.workspace}}/build \
        -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
        -DANDROID_ABI="arm64-v8a" \
        -DANDROID_PLATFORM=android-26 \
        -DCMAKE_BUILD_TYPE=Release \
        -DSDL2_DIR=${{github.workspace}}/android/SDL2/cmake \
        -DSDL2_IMAGE_DIR=${{github.workspace}}/android/SDL2_image/cmake \
        -DSDL2_TTF_DIR=${{github.workspace}}/android/SDL2_ttf/cmake \
        -DSDL2_MIXER_DIR=${{github.workspace}}/android/SDL2_mixer/cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release --verbose

    - name: Build Android APK
      if: matrix.platform == 'android'
      run: |
        cd android
        ./gradlew assembleRelease
        cp app/build/outputs/apk/release/app-release.apk ../FishGame-Android.apk

    - name: Prepare Release Package (Windows)
      if: runner.os == 'Windows' && matrix.platform == 'windows'
      shell: cmd
      run: |
        mkdir FishGame
        copy "build\Release\${{ matrix.exe_name }}" "FishGame\"
        for /r %%i in (SDL2*.dll) do copy "%%i" "FishGame\"
        xcopy /E /I /Y "asset" "FishGame\asset\"

    - name: Prepare Release Package (Linux/macOS)
      if: matrix.platform != 'android' && matrix.platform != 'windows'
      run: |
        mkdir -p FishGame
        cp "build/${{ matrix.exe_name }}" "FishGame/"
        cp -r asset FishGame/

    - name: Create ZIP Archive (Desktop)
      if: matrix.platform != 'android'
      run: |
        7z a -tzip ${{ matrix.artifact_name }} ./FishGame/*

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-build
        path: ${{ matrix.artifact_name }}

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.artifact_name }}
        name: 游戏发布 ${{ github.ref_name }}
        body: |
          ## 🎮 鱼吃鱼游戏 ${{ github.ref_name }}
          
          ### 📥 下载说明
          请根据您的操作系统选择对应的版本：
          - Windows: FishGame-Windows.zip
          - Linux: FishGame-Linux.zip
          - macOS: FishGame-macOS.zip
          - Android: FishGame-Android.apk
          
          ### 📦 安装说明
          1. 下载对应平台的压缩包/安装包：
          2. 安装/运行说明：
             - Windows: 解压后双击运行 DLNU_CPP_CourseDesign.exe
             - Linux/macOS: 解压后在终端中运行 ./DLNU_CPP_CourseDesign
             - Android: 直接安装 APK 文件
          
          ### 🎯 游戏说明
          - 使用方向键/触摸控制鱼的移动
          - 吃掉比自己小的鱼来成长
          - 注意躲避比自己大的鱼
        token: ${{ secrets.GITHUB_TOKEN }}
