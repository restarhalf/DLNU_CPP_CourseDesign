name: CMake Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
            artifact_name: FishGame-Windows.zip
            exe_name: DLNU_CPP_CourseDesign.exe
          - os: ubuntu-latest
            platform: linux
            artifact_name: FishGame-Linux.zip
            exe_name: DLNU_CPP_CourseDesign
          - os: macos-latest
            platform: macos
            artifact_name: FishGame-macOS.zip
            exe_name: DLNU_CPP_CourseDesign

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install SDL2 Dependencies (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        curl -L -o SDL2.zip https://github.com/libsdl-org/SDL/releases/download/release-2.28.5/SDL2-devel-2.28.5-VC.zip
        curl -L -o SDL2_image.zip https://github.com/libsdl-org/SDL_image/releases/download/release-2.6.3/SDL2_image-devel-2.6.3-VC.zip
        curl -L -o SDL2_ttf.zip https://github.com/libsdl-org/SDL_ttf/releases/download/release-2.20.2/SDL2_ttf-devel-2.20.2-VC.zip
        curl -L -o SDL2_mixer.zip https://github.com/libsdl-org/SDL_mixer/releases/download/release-2.6.3/SDL2_mixer-devel-2.6.3-VC.zip
        7z x SDL2.zip
        7z x SDL2_image.zip
        7z x SDL2_ttf.zip
        7z x SDL2_mixer.zip

    - name: Install SDL2 Dependencies (Ubuntu)
      if: runner.os == 'Linux' && matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev

    - name: Install SDL2 Dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install sdl2 sdl2_image sdl2_ttf sdl2_mixer

    - name: Configure CMake (Desktop Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        cmake -B ${{github.workspace}}/build ^
        -DCMAKE_BUILD_TYPE=Release ^
        -DCMAKE_VERBOSE_MAKEFILE=ON ^
        -DCMAKE_PREFIX_PATH=${{github.workspace}}/lib/dep/plugins/SDL2/cmake

    - name: Configure CMake (Desktop Unix)
      if: runner.os != 'Windows'
      run: |
        cmake -B ${{github.workspace}}/build \\
        -DCMAKE_BUILD_TYPE=Release \\
        -DCMAKE_VERBOSE_MAKEFILE=ON \\
        -DCMAKE_PREFIX_PATH=/usr/local/lib/cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release --verbose

    - name: Prepare Release Package (Windows)
      if: runner.os == 'Windows' && matrix.platform == 'windows'
      shell: cmd
      run: |
        mkdir FishGame
        copy "build\Release\${{ matrix.exe_name }}" "FishGame\"
        for /r %%i in (SDL2*.dll) do copy "%%i" "FishGame\"
        xcopy /E /I /Y "asset" "FishGame\asset\"

    - name: Prepare Release Package (Linux/macOS)
      if: matrix.platform != 'windows'
      run: |
        mkdir -p FishGame
        cp "build/${{ matrix.exe_name }}" "FishGame/"
        cp -r asset FishGame/

    - name: Create ZIP Archive (Desktop)
      run: |
        7z a -tzip ${{ matrix.artifact_name }} ./FishGame/*

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-build
        path: ${{ matrix.artifact_name }}

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.artifact_name }}
        token: ${{ secrets.GITHUB_TOKEN }}
