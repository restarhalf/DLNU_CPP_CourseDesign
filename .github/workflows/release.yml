name: 构建并发布游戏

on:
  push:
    tags:
      - 'v*'  # 当推送带v开头的新标签时触发，如v1.0.0, v1.1.0等

  # 也可以手动触发工作流
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      # 检出代码
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史，以便正确生成版本信息

      # 设置Visual Studio环境
      - name: 设置Visual Studio环境
        uses: ilammy/msvc-dev-cmd@v1

      # 设置CMake环境
      - name: 设置CMake环境
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.25.x'

      # 创建构建目录
      - name: 创建构建目录
        run: cmake -E make_directory ${{github.workspace}}/build

      # 配置CMake
      - name: 配置CMake
        shell: cmd
        working-directory: ${{github.workspace}}/build
        run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=Release

      # 构建项目
      - name: 构建项目
        shell: cmd
        working-directory: ${{github.workspace}}/build
        run: cmake --build . --config Release

      # 获取标签版本
      - name: 获取版本号
        id: get_version
        shell: bash
        run: |
          # 从标签中获取版本号
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=nightly-$(date +'%Y%m%d')
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      # 创建发布包
      - name: 创建发布包
        shell: cmd
        run: |
          mkdir release
          
          REM 复制构建好的可执行文件
          copy build\Release\DLNU_CPP_CourseDesign.exe release\
          
          REM 复制SDL2相关DLL
          copy lib\dep\plugins\SDL2\lib\x64\SDL2.dll release\
          copy lib\dep\plugins\SDL2\lib\x64\SDL2_image.dll release\
          copy lib\dep\plugins\SDL2\lib\x64\SDL2_ttf.dll release\
          copy lib\dep\plugins\SDL2\lib\x64\SDL2_mixer.dll release\
          
          REM 复制可选依赖的DLL
          copy lib\dep\plugins\SDL2\lib\x64\optional\libogg-0.dll release\
          copy lib\dep\plugins\SDL2\lib\x64\optional\libopus-0.dll release\
          copy lib\dep\plugins\SDL2\lib\x64\optional\libopusfile-0.dll release\
          copy lib\dep\plugins\SDL2\lib\x64\optional\libwebp-7.dll release\
          
          REM 复制游戏资源文件
          mkdir release\asset
          xcopy /E /I asset release\asset
          
          REM 复制文档文件
          copy README.md release\
          copy VERSION.md release\
          
          REM 创建启动说明
          echo # 大鱼吃小鱼游戏 ${{ steps.get_version.outputs.VERSION }} > release\readme.txt
          echo. >> release\readme.txt
          echo 直接双击DLNU_CPP_CourseDesign.exe即可运行游戏 >> release\readme.txt
          echo 游戏控制：方向键控制鱼的移动 >> release\readme.txt
          echo. >> release\readme.txt
          echo 本发布版本已包含所有必要的SDL2库文件，无需额外安装 >> release\readme.txt

      # 创建ZIP发布包
      - name: 创建ZIP发布包
        shell: cmd
        run: |
          powershell Compress-Archive -Path release\* -DestinationPath 大鱼吃小鱼_${{ steps.get_version.outputs.VERSION }}.zip -Force

      # 创建GitHub发布
      - name: 创建GitHub发布
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: 大鱼吃小鱼 ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: 大鱼吃小鱼_${{ steps.get_version.outputs.VERSION }}.zip
          body: |
            ## 大鱼吃小鱼 ${{ steps.get_version.outputs.VERSION }} 发布版
            
            ### 发布说明
            - 本版本包含所有运行所需的SDL2库文件，下载解压后可直接运行
            - 无需额外安装SDL2库，解压即可使用
            - 使用方向键控制鱼的移动，吞噬比自己小的鱼类获得成长
            
            ### 安装方法
            1. 下载ZIP文件
            2. 将ZIP文件解压到任意位置
            3. 双击DLNU_CPP_CourseDesign.exe运行游戏
